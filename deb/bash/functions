# Compression
compress() { tar -czf "${1%/}.tar.gz" "${1%/}"; }
alias decompress="tar -xzf"

# Convert webm files generated by the Gnome screenshot video recorder to mp4s that are more compatible
webm2mp4() {
  input_file="$1"
  output_file="${input_file%.webm}.mp4"
  ffmpeg -i "$input_file" -c:v libx264 -vf "pad=ceil(iw/2)*2:ceil(ih/2)*2" -preset slow -crf 22 -c:a aac -b:a 192k "$output_file"
}

# SSH key management
ssh-key-put() {
  if [ "$#" -ne 1 ]; then
    echo "Usage: ssh-key-put <user@host> <optional:path_to_key (default: ~/.ssh/id_ed25519.pub)>"
    return 1
  fi

  if [ -n "$2" ]; then
    local SSH_KEY="$2"
  else
    local SSH_KEY="$HOME/.ssh/id_ed25519.pub"
  fi

  cat ~/.ssh/id_ed25519.pub | ssh "$1" "mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >>  ~/.ssh/authorized_keys";
}

# Start a simple HTTP server
webserver() {
  # Show usage if -h is passed
  if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    echo "Usage: webserver [-b] [port] [directory]"
    echo "  -b: Open default browser on <port>"
    echo "  port: Port number (default: 8000)"
    echo "  directory: Directory to serve (default: current directory)"
    return 0
  fi

  local open_browser=false
  if [[ "$1" == "-b" ]]; then
    open_browser=true
    shift
  fi

  local port=${1:-8000}
  local dir=${2:-.}

  if [ ! -d "$dir" ]; then
    echo "Error: Directory '$dir' does not exist"
    return 1
  fi

  # Check if port is already in use
  if lsof -i :$port >/dev/null 2>&1; then
    echo "Error: Port $port is already in use"
    return 1
  fi

  if [ "$open_browser" = true ]; then
    open "http://localhost:$port"
  fi

  python3 -m http.server $port --directory $dir
}